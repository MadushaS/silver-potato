---
const { title,author,description,date,url } = Astro.props
import dayjs from 'dayjs';
import relativeTime from 'dayjs/plugin/relativeTime';
dayjs.extend(relativeTime);

let formattedDate = dayjs(date).fromNow();

import {members,imageCDNPath} from '../data/memberList';
import { Image } from 'astro:assets';
let authorData;
members.filter((m) => m.slug === author).map((m) => {
    authorData = m;
});
---
<div class="group rounded-lg bg-white border border-gray-100 dark:shadow-none dark:border-gray-700 dark:bg-gray-800 bg-opacity-50 shadow-2xl shadow-gray-600/10">
    <a href={url} class="relative block overflow-hidden rounded-lg border border-gray-100 p-4 sm:p-6 lg:p-8" >
      <span class="absolute inset-x-0 bottom-0 h-2 bg-gradient-to-r from-green-300 via-blue-500 to-purple-600" >
      </span>

      <div class="sm:flex sm:justify-between sm:gap-4">
        <div>
          <h3 class="text-lg font-bold text-gray-900 dark:text-white sm:text-xl"> {title} </h3>
          <p class="mt-1 text-xs font-medium text-gray-700 dark:text-gray-300">By {authorData.name}</p>
        </div>

        <div class="hidden sm:block sm:shrink-0">
          <Image alt={authorData.name} src={imageCDNPath(authorData.slug)} class="w-16 max-h-full rounded-lg object-cover shadow-sm" width={64} height={64} loading='eager'/>
        </div>
      </div>

      <div class="mt-4">
        <p class="text-pretty text-sm text-gray-600 dark:text-gray-400">
          {description}
        </p>
      </div>

      <dl class="mt-6 flex gap-4 sm:gap-6">
        <div class="flex flex-col-reverse">
          <dt class="text-sm font-medium text-gray-700 dark:text-gray-300">Published</dt>
          <dd class="text-xs text-gray-600 dark:text-gray-400">{formattedDate}</dd>
        </div>

      </dl>
    </a>
    
  </div>